<Page
    x:Class="Microsoft.PowerToys.Settings.UI.Views.FancyZonesPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Microsoft.PowerToys.Settings.UI.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModel="using:Microsoft.PowerToys.Settings.UI.ViewModels"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:CustomControls="using:Microsoft.PowerToys.Settings.UI.Controls"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <viewModel:FancyZonesViewModel x:Key="eventViewModel"/>
    </Page.Resources>

    <Grid ColumnSpacing="{StaticResource DefaultColumnSpacing}" RowSpacing="{StaticResource DefaultRowSpacing}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="LayoutVisualStates">
                <VisualState x:Name="WideLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideLayoutMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SidePanel.(Grid.Column)" Value="1" />
                        <Setter Target="SidePanel.(Grid.Row)" Value="0" />
                        <Setter Target="SidePanel.Width" Value="{StaticResource SidePanelWidth}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SmallLayout">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource SmallLayoutMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SidePanel.(Grid.Column)" Value="0" />
                        <Setter Target="SidePanel.(Grid.Row)" Value="1" />
                        <Setter Target="SidePanel.Width" Value="Auto" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StackPanel Orientation="Vertical" x:Name="FZSettingsView">
            <TextBlock x:Uid="FancyZones_Description"
                       TextWrapping="Wrap"/>

            <ToggleSwitch x:Uid="FancyZones_EnableToggleControl_HeaderText"
                          IsOn="{ Binding Mode=TwoWay, Path=IsEnabled}"
                          Margin="{StaticResource MediumTopMargin}" />

            <Button Margin="{StaticResource MediumTopMargin}"
                    Style="{StaticResource AccentButtonStyle}"
                    Command = "{Binding LaunchEditorEventHandler, Source={StaticResource eventViewModel}}"
                    IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}">
                <StackPanel Orientation="Horizontal">
                    <Viewbox Height="12" Width="12">
                    <PathIcon Data="M896 0v896H0V0h896zM768 768V128H128v640h640zM0 1920v-896h1920v896H0zm128-768v640h1664v-640H128zM1024 0h896v896h-896V0zm768 768V128h-640v640h640z"/>
                    </Viewbox>
                    <TextBlock Margin="12,0,0,0" x:Uid="FancyZones_LaunchEditorButtonControl"/>
                </StackPanel>
            </Button>
            
            <TextBlock x:Uid="FancyZones_ZoneBehavior_GroupSettings"
                       Style="{StaticResource SettingsGroupTitleStyle}"
                       />

            <CustomControls:HotkeySettingsControl 
                                          x:Uid="FancyZones_HokeyEditorControl_Header"
                                          Width="320"
                                          HorizontalAlignment="Left"
                                          Margin="{StaticResource SmallTopMargin}"
                                          HotkeySettings="{x:Bind Path=ViewModel.EditorHotkey, Mode=TwoWay}"
                                          IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}"        
                                        />

            <CheckBox x:Uid="FancyZones_ShiftDragCheckBoxControl_Header"
                      IsChecked="{ Binding Mode=TwoWay, Path=ShiftDrag}"
                      Margin="{StaticResource SmallTopMargin}"
                      IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}"
                      />

            <CheckBox x:Uid="FancyZones_MouseDragCheckBoxControl_Header"
                      IsChecked="{ Binding Mode=TwoWay, Path=MouseSwitch}"
                      Margin="{StaticResource SmallTopMargin}"
                      IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}"
                      />

            <CheckBox x:Uid="FancyZones_OverrideSnapHotkeysCheckBoxControl"
                      IsChecked="{ Binding Mode=TwoWay, Path=OverrideSnapHotkeys}"
                      Margin="{StaticResource SmallTopMargin}"
                      IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}"/>

            <CheckBox x:Uid="FancyZones_MoveWindowsAcrossAllMonitorsCheckBoxControl"
                      IsChecked="{ Binding Mode=TwoWay, Path=MoveWindowsAcrossMonitors}"
                      Margin="{StaticResource SmallTopMargin}"
                      IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}"/>

            <CheckBox x:Uid="FancyZones_DisplayChangeMoveWindowsCheckBoxControl"
                      IsChecked="{ Binding Mode=TwoWay, Path=DisplayChangeMoveWindows}"
                      Margin="{StaticResource SmallTopMargin}"
                      IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}"
                      />

            <CheckBox x:Uid="FancyZones_ZoneSetChangeMoveWindows"
                      IsChecked="{ Binding Mode=TwoWay, Path=ZoneSetChangeMoveWindows}"
                      Margin="{StaticResource SmallTopMargin}"
                      IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}"/>

            <CheckBox x:Uid="FancyZones_UseCursorPosEditorStartupScreen"
                      IsChecked="{ Binding Mode=TwoWay, Path=UseCursorPosEditorStartupScreen}"
                      Margin="{StaticResource SmallTopMargin}"
                      IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}"/>

            <CheckBox x:Uid="FancyZones_ShowZonesOnAllMonitorsCheckBoxControl"
                      IsChecked="{ Binding Mode=TwoWay, Path=ShowOnAllMonitors}"
                      Margin="{StaticResource SmallTopMargin}"
                      IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}"/>

            <CheckBox x:Uid="FancyZones_MakeDraggedWindowTransparentCheckBoxControl"
                      IsChecked="{ Binding Mode=TwoWay, Path=MakeDraggedWindowsTransparent}"
                      Margin="{StaticResource SmallTopMargin}"
                      IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}"/>


            <TextBlock x:Uid="Appearance_GroupSettings"
                       Style="{StaticResource SettingsGroupTitleStyle}"/>

            <!-- TO DO: Do we still need this numberbox? The colorpicker has an Alpha/Opacity option as well so we could use that -->
            <muxc:NumberBox x:Uid="FancyZones_HighlightOpacity"
                            Value="{ Binding Mode=TwoWay, Path=HighlightOpacity}"
                            Minimum="0"
                            Maximum="100"
                            SpinButtonPlacementMode="Compact"
                            HorizontalAlignment="Left"
                            Margin="{StaticResource SmallTopMargin}" 
                            IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}" />
             
            <TextBlock x:Uid="FancyZones_ZoneHighlightColor" 
                       Style="{StaticResource BodyTextBlockStyle}"
                       Margin="{StaticResource SmallTopMargin}" />

            <muxc:DropDownButton Margin="0,4,0,0" IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}" Padding="4,4,8,4">
                <Border Width="48" CornerRadius="2" Height="24">
                    <Border.Background>
                        <SolidColorBrush Color="{Binding Path=ZoneHighlightColor, Mode=TwoWay}"/>
                    </Border.Background>
                </Border>
                <muxc:DropDownButton.Flyout>
                    <Flyout>
                    <muxc:ColorPicker x:Name="FancyZones_ZoneHighlightColor"
                              Margin="0,6,0,0"
                              HorizontalAlignment="Left"
                              IsColorSliderVisible="True"
                              IsColorChannelTextInputVisible="True"
                              IsHexInputVisible="True"
                              IsAlphaEnabled="False"
                              IsAlphaSliderVisible="False"
                              IsAlphaTextInputVisible="False"
                              Color="{Binding Path=ZoneHighlightColor, Mode=TwoWay}"
                              />
                    </Flyout>
                </muxc:DropDownButton.Flyout>
            
            </muxc:DropDownButton>
            

            <TextBlock x:Uid="FancyZones_InActiveColor" 
                       Style="{StaticResource BodyTextBlockStyle}"
                       Margin="{StaticResource SmallTopMargin}" />

            <muxc:DropDownButton Margin="0,4,0,0" IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}" Padding="4,4,8,4">
                <Border Width="48" CornerRadius="2" Height="24">
                    <Border.Background>
                        <SolidColorBrush Color="{Binding Path=ZoneInActiveColor, Mode=TwoWay}"/>
                    </Border.Background>
                </Border>
                <muxc:DropDownButton.Flyout>
                    <Flyout>
                        <muxc:ColorPicker x:Name="FancyZones_InActiveColorPicker"
                              Margin="0,6,0,0"
                              HorizontalAlignment="Left"
                              IsColorSliderVisible="True"
                              IsColorChannelTextInputVisible="True"
                              IsHexInputVisible="True"
                              IsAlphaEnabled="False"
                              IsAlphaSliderVisible="False"
                              IsAlphaTextInputVisible="False"
                              Color="{Binding Path=ZoneInActiveColor, Mode=TwoWay}"/>
                    </Flyout>
                </muxc:DropDownButton.Flyout>
            </muxc:DropDownButton>
            
            
            <TextBlock x:Uid="FancyZones_BorderColor" 
                       Style="{StaticResource BodyTextBlockStyle}"
                       Margin="{StaticResource SmallTopMargin}" />


            <muxc:DropDownButton Margin="0,4,0,0" IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}" Padding="4,4,8,4">
                <Border Width="48" CornerRadius="2" Height="24">
                    <Border.Background>
                        <SolidColorBrush Color="{Binding Path=ZoneBorderColor, Mode=TwoWay}"/>
                    </Border.Background>
                </Border>
                <muxc:DropDownButton.Flyout>
                    <Flyout>
                        <muxc:ColorPicker x:Name="FancyZones_BorderColor"
                              Margin="0,6,0,0"
                              HorizontalAlignment="Left"
                              IsColorSliderVisible="True"                             
                              IsColorChannelTextInputVisible="True"
                              IsHexInputVisible="True"
                              IsAlphaEnabled="False"
                              IsAlphaSliderVisible="False"
                              IsAlphaTextInputVisible="False"
                              Color="{Binding Path=ZoneBorderColor, Mode=TwoWay}"
                              IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}"/>
                    </Flyout>
                </muxc:DropDownButton.Flyout>
            </muxc:DropDownButton>

            <TextBlock x:Uid="FancyZones_ExcludeApps"
                       Style="{StaticResource SettingsGroupTitleStyle}"/>

            <TextBox x:Uid="FancyZones_ExcludeApps_TextBoxControl"
                     Margin="{StaticResource SmallTopMargin}"
                     Text="{ Binding Mode=TwoWay, Path=ExcludedApps}"
                     IsEnabled="{ Binding Mode=TwoWay, Path=IsEnabled}"
                     TextWrapping="Wrap"
                     AcceptsReturn="True"/>

        </StackPanel>

        <StackPanel x:Name="SidePanel"
                    Orientation="Vertical"
                    HorizontalAlignment="Left"
                    Width="{StaticResource SidePanelWidth}"
                    Grid.Column="1">

            <TextBlock x:Uid="About_FancyZones"
                       Style="{StaticResource SettingsGroupTitleStyle}"
                       Margin="{StaticResource XSmallBottomMargin}"/>

            <Image MaxWidth="240" Source="https://user-images.githubusercontent.com/9866362/77859136-f04ae880-7207-11ea-8a7f-4295342fe319.gif" />

            <HyperlinkButton NavigateUri="https://github.com/microsoft/PowerToys/blob/master/src/modules/fancyzones/README.md">
                <TextBlock x:Uid="Module_overview" />
            </HyperlinkButton>

            <HyperlinkButton NavigateUri="https://github.com/microsoft/PowerToys/issues">
                <TextBlock x:Uid="Give_Feedback" />
            </HyperlinkButton>

            <!--
            <TextBlock Text="Contributors"
                           Style="{StaticResource SettingsGroupTitleStyle}"/>

            <HyperlinkButton Content="Contributor name"/>
            <HyperlinkButton Content="Contributor name"/>
            <HyperlinkButton Content="Contributor name"/>
            -->
        </StackPanel>
    </Grid>
</Page>